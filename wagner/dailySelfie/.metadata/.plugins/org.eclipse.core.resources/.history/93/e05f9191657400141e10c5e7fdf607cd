package coursera.wagner.dailyselfie;

import java.io.File;
import java.io.IOException;

import coursera.wagner.artgenerator.R;

import android.app.ActionBar;
import android.app.Activity;
import android.app.ListActivity;
import android.content.Intent;
import android.database.DataSetObserver;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.util.Log;
import android.view.ContextMenu;
import android.view.ContextMenu.ContextMenuInfo;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.GridView;
import android.widget.LinearLayout;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SeekBar;
import android.widget.SimpleAdapter;
import android.widget.TextView;
import android.widget.Toast;

public class MainScreenActivity extends ListActivity {
	
	private ImageDataManager mImageDataManager;
	
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		try {
			mImageDataManager = new ImageDataManager();
		} catch(IOException e) {
			Log.e(getClass().getCanonicalName(), "Error initializing image file parameters", e);
			return;
		}
		
		getListView().setOnItemLongClickListener(new OnItemLongClickListener() {
		      public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {
		    	Toast.makeText(MainScreenActivity.this, "Long press listener!", Toast.LENGTH_LONG).show();
		    	// TODO implement context long click logic
		        return true;
		      }
		    });
		
		setListAdapter(new SelfiesArrayAdapter(this, mImageDataManager.getFileList()));
	}
	
	

	@Override
	protected void onListItemClick(ListView l, View v, int position, long id) {
		File item = (File) getListAdapter().getItem(position);
		// TODO use explicit activit with imagedetailsactivity
		Intent intent = new Intent(this, ImageDetailsActivity.class);
		Bundle b = new Bundle();
		b.putInt("key", 1); //Your id
		intent.putExtras(b); //Put your id to your next Intent
		intent.getExtras().putString(ImageDetailsActivity.FILENAME_PARAMETER, item.getAbsolutePath());
		startActivity(intent);
	}
	
	// Create Options Menu
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Create action menu
		MenuInflater inflater = getMenuInflater();
		inflater.inflate(R.menu.top_menu, menu);
		return true;
	}
	
	// Process clicks on Options Menu items
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		
		switch (item.getItemId()) {
		case R.id.picture:
			dispatchTakePictureIntent();
			return true;
		default:
			return false;
		}
	}
	
	static final int REQUEST_IMAGE_CAPTURE = 1;

	private void dispatchTakePictureIntent() {
		Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
	    // Ensure that there's a camera activity to handle the intent
	    if (takePictureIntent.resolveActivity(getPackageManager()) != null) {
	        // Create the File where the photo should go
	        File photoFile = new File(mImageDataManager.getDirectory(), mImageDataManager.createFileName());
	        // Continue only if the File was successfully created
	        if (photoFile != null) {
	        	
	            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(photoFile));
	            startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);
	        }
	    }
	}
	
	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
	    if (requestCode == REQUEST_IMAGE_CAPTURE) {
	    	if(resultCode == RESULT_OK) { 
	    		// Reset alarm
	    		SelfiesArrayAdapter adapter = new SelfiesArrayAdapter(this, mImageDataManager.getFileList());
				setListAdapter(adapter);
				adapter.notifyDataSetChanged();
	    		Toast.makeText(this, "Selfie saved successfuly", Toast.LENGTH_LONG).show();
	    	} else if(resultCode == RESULT_CANCELED) {
	    		Toast.makeText(this, "Selfie capture canceled", Toast.LENGTH_LONG).show();
	    	}
	    }
	}
}